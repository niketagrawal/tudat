# When a push is made to the develop branch of the main repository, this workflow does the following:
# 1. Bumps the version in the tudat github repository.
# 2. Creates a new tag in the tudat github repository.
# 3. Sends a repository dispatch event to the tudat-feedstock repository to trigger the creation of a new development conda package.


name: Bump version upon new commits in the last 24 hours and notify feedstock

on:
    schedule:
        - cron: '*/5 * * * *'
    workflow_dispatch:

permissions:
  contents: write
  actions: write

jobs:

  echo_hello:
    runs-on: ubuntu-latest
    name: Echo Hello
    steps:
      - name: Echo Hello
        run: echo "Hello"

  check_date:
        runs-on: ubuntu-latest
        name: Check latest commit
        outputs:
          should_run: ${{ steps.should_run.outputs.should_run }}
        if: github.ref == 'refs/heads/develop'
        steps:
          - uses: actions/checkout@v4
          - name: print latest_commit
            run: echo ${{ github.sha }}

          - id: should_run
            continue-on-error: true
            name: check latest commit is less than a day
            if: ${{ github.event_name == 'schedule' }}
            run: test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) && echo "::set-output name=should_run::false"


  bump-version:
    needs: check_date
    if: ${{ needs.check_date.outputs.should_run != 'false' }} && github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    name: Bump version in tudat repository
    outputs:
      new_version: ${{ steps.bump_version.outputs.new_version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install bump2version
        run: pip install bump2version

      - name: Bump version
        id: bump_version
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          bump2version dev --config-file .bumpversion.cfg --verbose
          new_version=$(bump2version --dry-run --list | grep new_version= | sed 's/new_version=//')
          echo "new_version=$new_version" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push tag to tudat repository
        run: git push origin --follow-tags
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  dispatcher:
    needs: [check_date, bump-version]
    if: ${{ needs.check_date.outputs.should_run != 'false' }} && github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    name: dispatch repository event to tudat-feedstock
    # needs: bump-version

    steps:
      - name: repository-dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PAT_dispatch }}
          repository: niketagrawal/tudat-feedstock
          event-type: push-to-niketagrawal/tudat-feedstock
          client-payload: >-
            {
              "event": "${{ github.event_name }}",
              "actor": "${{ github.actor }}",
              "repository": "${{ github.repository }}",
              "ref": "${{ github.ref }}",
              "ref_name": "${{ github.ref_name }}",
              "ref_type": "${{ github.ref_type }}",
              "sha": "${{ github.sha }}",
              "version": "${{ needs.bump-version.outputs.new_version }}"
            }
